// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.3
// source: logging.proto

package logging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "scmc/rpc/pb/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EVENT_MODULE int32

const (
	EVENT_MODULE_NONE      EVENT_MODULE = 0
	EVENT_MODULE_NODE      EVENT_MODULE = 1
	EVENT_MODULE_CONTAINER EVENT_MODULE = 2
	EVENT_MODULE_IMAGE     EVENT_MODULE = 3
	EVENT_MODULE_USER      EVENT_MODULE = 4
)

// Enum value maps for EVENT_MODULE.
var (
	EVENT_MODULE_name = map[int32]string{
		0: "NONE",
		1: "NODE",
		2: "CONTAINER",
		3: "IMAGE",
		4: "USER",
	}
	EVENT_MODULE_value = map[string]int32{
		"NONE":      0,
		"NODE":      1,
		"CONTAINER": 2,
		"IMAGE":     3,
		"USER":      4,
	}
)

func (x EVENT_MODULE) Enum() *EVENT_MODULE {
	p := new(EVENT_MODULE)
	*p = x
	return p
}

func (x EVENT_MODULE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EVENT_MODULE) Descriptor() protoreflect.EnumDescriptor {
	return file_logging_proto_enumTypes[0].Descriptor()
}

func (EVENT_MODULE) Type() protoreflect.EnumType {
	return &file_logging_proto_enumTypes[0]
}

func (x EVENT_MODULE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EVENT_MODULE.Descriptor instead.
func (EVENT_MODULE) EnumDescriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{0}
}

// NODE 100 - 199
// CONTAINER 200 - 299
// IMAGE 300 - 399
// USER 400 - 499
type EVENT_TYPE int32

const (
	EVENT_TYPE_TYPE_NONE              EVENT_TYPE = 0
	EVENT_TYPE_CREATE_NODE            EVENT_TYPE = 101
	EVENT_TYPE_UPDATE_NODE            EVENT_TYPE = 102
	EVENT_TYPE_REMOVE_NODE            EVENT_TYPE = 103
	EVENT_TYPE_CREATE_CONTAINER       EVENT_TYPE = 201
	EVENT_TYPE_START_CONTAINER        EVENT_TYPE = 202
	EVENT_TYPE_STOP_CONTAINER         EVENT_TYPE = 203
	EVENT_TYPE_REMOVE_CONTAINER       EVENT_TYPE = 204
	EVENT_TYPE_RESTART_CONTAINER      EVENT_TYPE = 205
	EVENT_TYPE_UPLOAD_IMAGE           EVENT_TYPE = 301
	EVENT_TYPE_DOWNLOAD_IMAGE         EVENT_TYPE = 302
	EVENT_TYPE_APPROVE_IMAGE          EVENT_TYPE = 303
	EVENT_TYPE_UPDATE_IMAGE           EVENT_TYPE = 304
	EVENT_TYPE_REMOVE_IMAGE           EVENT_TYPE = 305
	EVENT_TYPE_USER_LOGIN             EVENT_TYPE = 401
	EVENT_TYPE_USER_LOGOUT            EVENT_TYPE = 402
	EVENT_TYPE_CREATE_USER            EVENT_TYPE = 403
	EVENT_TYPE_UPDATE_USER            EVENT_TYPE = 404
	EVENT_TYPE_REMOVE_USER            EVENT_TYPE = 405
	EVENT_TYPE_CREATE_ROLE            EVENT_TYPE = 406
	EVENT_TYPE_UPDATE_ROLE            EVENT_TYPE = 407
	EVENT_TYPE_REMOVE_ROLE            EVENT_TYPE = 408
	EVENT_TYPE_UPDATE_PASSWORD        EVENT_TYPE = 409
	EVENT_TYPE_WARN_RESOURCE_USAGE    EVENT_TYPE = 1001
	EVENT_TYPE_WARN_NODE_OFFLINE      EVENT_TYPE = 1002
	EVENT_TYPE_WARN_ILLEGAL_CONTAINER EVENT_TYPE = 1003
	EVENT_TYPE_WARN_NODE_ABNORMAL     EVENT_TYPE = 1004
)

// Enum value maps for EVENT_TYPE.
var (
	EVENT_TYPE_name = map[int32]string{
		0:    "TYPE_NONE",
		101:  "CREATE_NODE",
		102:  "UPDATE_NODE",
		103:  "REMOVE_NODE",
		201:  "CREATE_CONTAINER",
		202:  "START_CONTAINER",
		203:  "STOP_CONTAINER",
		204:  "REMOVE_CONTAINER",
		205:  "RESTART_CONTAINER",
		301:  "UPLOAD_IMAGE",
		302:  "DOWNLOAD_IMAGE",
		303:  "APPROVE_IMAGE",
		304:  "UPDATE_IMAGE",
		305:  "REMOVE_IMAGE",
		401:  "USER_LOGIN",
		402:  "USER_LOGOUT",
		403:  "CREATE_USER",
		404:  "UPDATE_USER",
		405:  "REMOVE_USER",
		406:  "CREATE_ROLE",
		407:  "UPDATE_ROLE",
		408:  "REMOVE_ROLE",
		409:  "UPDATE_PASSWORD",
		1001: "WARN_RESOURCE_USAGE",
		1002: "WARN_NODE_OFFLINE",
		1003: "WARN_ILLEGAL_CONTAINER",
		1004: "WARN_NODE_ABNORMAL",
	}
	EVENT_TYPE_value = map[string]int32{
		"TYPE_NONE":              0,
		"CREATE_NODE":            101,
		"UPDATE_NODE":            102,
		"REMOVE_NODE":            103,
		"CREATE_CONTAINER":       201,
		"START_CONTAINER":        202,
		"STOP_CONTAINER":         203,
		"REMOVE_CONTAINER":       204,
		"RESTART_CONTAINER":      205,
		"UPLOAD_IMAGE":           301,
		"DOWNLOAD_IMAGE":         302,
		"APPROVE_IMAGE":          303,
		"UPDATE_IMAGE":           304,
		"REMOVE_IMAGE":           305,
		"USER_LOGIN":             401,
		"USER_LOGOUT":            402,
		"CREATE_USER":            403,
		"UPDATE_USER":            404,
		"REMOVE_USER":            405,
		"CREATE_ROLE":            406,
		"UPDATE_ROLE":            407,
		"REMOVE_ROLE":            408,
		"UPDATE_PASSWORD":        409,
		"WARN_RESOURCE_USAGE":    1001,
		"WARN_NODE_OFFLINE":      1002,
		"WARN_ILLEGAL_CONTAINER": 1003,
		"WARN_NODE_ABNORMAL":     1004,
	}
)

func (x EVENT_TYPE) Enum() *EVENT_TYPE {
	p := new(EVENT_TYPE)
	*p = x
	return p
}

func (x EVENT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EVENT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_logging_proto_enumTypes[1].Descriptor()
}

func (EVENT_TYPE) Type() protoreflect.EnumType {
	return &file_logging_proto_enumTypes[1]
}

func (x EVENT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EVENT_TYPE.Descriptor instead.
func (EVENT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{1}
}

type ListRuntimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     int64  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	NodeId      int64  `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	EventModule int64  `protobuf:"varint,5,opt,name=event_module,json=eventModule,proto3" json:"event_module,omitempty"`
	Username    string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`                   // 用户筛选
	PageSize    int64  `protobuf:"varint,21,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 分页大小
	PageNo      int64  `protobuf:"varint,22,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`       // 分页页码
	SortBy      string `protobuf:"bytes,23,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`        // 排序字段(暂不用)
	SortDesc    bool   `protobuf:"varint,24,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"` // 倒序排序
}

func (x *ListRuntimeRequest) Reset() {
	*x = ListRuntimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuntimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimeRequest) ProtoMessage() {}

func (x *ListRuntimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimeRequest.ProtoReflect.Descriptor instead.
func (*ListRuntimeRequest) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{0}
}

func (x *ListRuntimeRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListRuntimeRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ListRuntimeRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListRuntimeRequest) GetEventModule() int64 {
	if x != nil {
		return x.EventModule
	}
	return 0
}

func (x *ListRuntimeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListRuntimeRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRuntimeRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListRuntimeRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListRuntimeRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

type ListRuntimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs       []*RuntimeLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	PageSize   int64         `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 页大小
	PageNo     int64         `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`             // 当前页
	TotalPages int64         `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"` // 总页数
}

func (x *ListRuntimeReply) Reset() {
	*x = ListRuntimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRuntimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimeReply) ProtoMessage() {}

func (x *ListRuntimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimeReply.ProtoReflect.Descriptor instead.
func (*ListRuntimeReply) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{1}
}

func (x *ListRuntimeReply) GetLogs() []*RuntimeLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListRuntimeReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRuntimeReply) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListRuntimeReply) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type ListWarnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId        int64  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ContainerId   string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	EventModule   int64  `protobuf:"varint,4,opt,name=event_module,json=eventModule,proto3" json:"event_module,omitempty"`
	PageSize      int64  `protobuf:"varint,21,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 分页大小
	PageNo        int64  `protobuf:"varint,22,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`       // 分页页码
	SortBy        string `protobuf:"bytes,23,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`        // 排序字段(暂不用)
	SortDesc      bool   `protobuf:"varint,24,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"` // 倒序排序
}

func (x *ListWarnRequest) Reset() {
	*x = ListWarnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWarnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWarnRequest) ProtoMessage() {}

func (x *ListWarnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWarnRequest.ProtoReflect.Descriptor instead.
func (*ListWarnRequest) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{2}
}

func (x *ListWarnRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListWarnRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ListWarnRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ListWarnRequest) GetEventModule() int64 {
	if x != nil {
		return x.EventModule
	}
	return 0
}

func (x *ListWarnRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWarnRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListWarnRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListWarnRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

type ListWarnReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs       []*WarnLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	PageSize   int64      `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 页大小
	PageNo     int64      `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`             // 当前页
	TotalPages int64      `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"` // 总页数
}

func (x *ListWarnReply) Reset() {
	*x = ListWarnReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWarnReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWarnReply) ProtoMessage() {}

func (x *ListWarnReply) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWarnReply.ProtoReflect.Descriptor instead.
func (*ListWarnReply) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{3}
}

func (x *ListWarnReply) GetLogs() []*WarnLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListWarnReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWarnReply) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListWarnReply) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type ReadWarnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ReadWarnRequest) Reset() {
	*x = ReadWarnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWarnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWarnRequest) ProtoMessage() {}

func (x *ReadWarnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWarnRequest.ProtoReflect.Descriptor instead.
func (*ReadWarnRequest) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{4}
}

func (x *ReadWarnRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ReadWarnReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadWarnReply) Reset() {
	*x = ReadWarnReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadWarnReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWarnReply) ProtoMessage() {}

func (x *ReadWarnReply) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWarnReply.ProtoReflect.Descriptor instead.
func (*ReadWarnReply) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{5}
}

type RuntimeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType   int64  `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventModule int64  `protobuf:"varint,3,opt,name=event_module,json=eventModule,proto3" json:"event_module,omitempty"`
	NodeId      int64  `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeInfo    string `protobuf:"bytes,5,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	UserId      int64  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 操作用户
	Username    string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`            // 操作用户
	Target      string `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`                // 操作对象
	Detail      string `protobuf:"bytes,9,opt,name=detail,proto3" json:"detail,omitempty"`
	StatusCode  int64  `protobuf:"varint,10,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 错误码
	Error       string `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`                              // 错误消息
	CreatedAt   int64  `protobuf:"varint,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RuntimeLog) Reset() {
	*x = RuntimeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeLog) ProtoMessage() {}

func (x *RuntimeLog) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeLog.ProtoReflect.Descriptor instead.
func (*RuntimeLog) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{6}
}

func (x *RuntimeLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuntimeLog) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *RuntimeLog) GetEventModule() int64 {
	if x != nil {
		return x.EventModule
	}
	return 0
}

func (x *RuntimeLog) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RuntimeLog) GetNodeInfo() string {
	if x != nil {
		return x.NodeInfo
	}
	return ""
}

func (x *RuntimeLog) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RuntimeLog) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RuntimeLog) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RuntimeLog) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *RuntimeLog) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RuntimeLog) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RuntimeLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RuntimeLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type WarnLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType     int64  `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventModule   int64  `protobuf:"varint,3,opt,name=event_module,json=eventModule,proto3" json:"event_module,omitempty"`
	NodeId        int64  `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeInfo      string `protobuf:"bytes,5,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	ContainerId   string `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string `protobuf:"bytes,7,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Detail        string `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	HaveRead      bool   `protobuf:"varint,9,opt,name=have_read,json=haveRead,proto3" json:"have_read,omitempty"` // 是否已读
	CreatedAt     int64  `protobuf:"varint,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64  `protobuf:"varint,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WarnLog) Reset() {
	*x = WarnLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarnLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarnLog) ProtoMessage() {}

func (x *WarnLog) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarnLog.ProtoReflect.Descriptor instead.
func (*WarnLog) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{7}
}

func (x *WarnLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WarnLog) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *WarnLog) GetEventModule() int64 {
	if x != nil {
		return x.EventModule
	}
	return 0
}

func (x *WarnLog) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *WarnLog) GetNodeInfo() string {
	if x != nil {
		return x.NodeInfo
	}
	return ""
}

func (x *WarnLog) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *WarnLog) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *WarnLog) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *WarnLog) GetHaveRead() bool {
	if x != nil {
		return x.HaveRead
	}
	return false
}

func (x *WarnLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WarnLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_logging_proto protoreflect.FileDescriptor

var file_logging_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x22, 0x92, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x27, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x83, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x61, 0x72, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x57, 0x61, 0x72, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x57, 0x61, 0x72,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65,
	0x61, 0x64, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xee, 0x02, 0x0a, 0x0a,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x02, 0x0a,
	0x07, 0x57, 0x61, 0x72, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x46, 0x0a,
	0x0c, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x04, 0x2a, 0xae, 0x04, 0x0a, 0x0a, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f,
	0x44, 0x45, 0x10, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x10, 0x66, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x10, 0x67, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0xc9, 0x01, 0x12, 0x14, 0x0a,
	0x0f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52,
	0x10, 0xca, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0xcb, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0xcc, 0x01, 0x12,
	0x16, 0x0a, 0x11, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41,
	0x49, 0x4e, 0x45, 0x52, 0x10, 0xcd, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x50, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0xad, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x44, 0x4f,
	0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0xae, 0x02, 0x12,
	0x12, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x10, 0xaf, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x10, 0xb0, 0x02, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0xb1, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x91, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x92, 0x03, 0x12, 0x10, 0x0a, 0x0b,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x93, 0x03, 0x12, 0x10,
	0x0a, 0x0b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x94, 0x03,
	0x12, 0x10, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10,
	0x95, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x10, 0x96, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x10, 0x97, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x98, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x99, 0x03, 0x12, 0x18,
	0x0a, 0x13, 0x57, 0x41, 0x52, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x10, 0xe9, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x57, 0x41, 0x52, 0x4e,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xea, 0x07,
	0x12, 0x1b, 0x0a, 0x16, 0x57, 0x41, 0x52, 0x4e, 0x5f, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0xeb, 0x07, 0x12, 0x17, 0x0a,
	0x12, 0x57, 0x41, 0x52, 0x4e, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x42, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0xec, 0x07, 0x32, 0xd2, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x52,
	0x65, 0x61, 0x64, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x73,
	0x63, 0x6d, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logging_proto_rawDescOnce sync.Once
	file_logging_proto_rawDescData = file_logging_proto_rawDesc
)

func file_logging_proto_rawDescGZIP() []byte {
	file_logging_proto_rawDescOnce.Do(func() {
		file_logging_proto_rawDescData = protoimpl.X.CompressGZIP(file_logging_proto_rawDescData)
	})
	return file_logging_proto_rawDescData
}

var file_logging_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_logging_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_logging_proto_goTypes = []interface{}{
	(EVENT_MODULE)(0),          // 0: logging.EVENT_MODULE
	(EVENT_TYPE)(0),            // 1: logging.EVENT_TYPE
	(*ListRuntimeRequest)(nil), // 2: logging.ListRuntimeRequest
	(*ListRuntimeReply)(nil),   // 3: logging.ListRuntimeReply
	(*ListWarnRequest)(nil),    // 4: logging.ListWarnRequest
	(*ListWarnReply)(nil),      // 5: logging.ListWarnReply
	(*ReadWarnRequest)(nil),    // 6: logging.ReadWarnRequest
	(*ReadWarnReply)(nil),      // 7: logging.ReadWarnReply
	(*RuntimeLog)(nil),         // 8: logging.RuntimeLog
	(*WarnLog)(nil),            // 9: logging.WarnLog
}
var file_logging_proto_depIdxs = []int32{
	8, // 0: logging.ListRuntimeReply.logs:type_name -> logging.RuntimeLog
	9, // 1: logging.ListWarnReply.logs:type_name -> logging.WarnLog
	2, // 2: logging.Logging.ListRuntime:input_type -> logging.ListRuntimeRequest
	4, // 3: logging.Logging.ListWarn:input_type -> logging.ListWarnRequest
	6, // 4: logging.Logging.ReadWarn:input_type -> logging.ReadWarnRequest
	3, // 5: logging.Logging.ListRuntime:output_type -> logging.ListRuntimeReply
	5, // 6: logging.Logging.ListWarn:output_type -> logging.ListWarnReply
	7, // 7: logging.Logging.ReadWarn:output_type -> logging.ReadWarnReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_logging_proto_init() }
func file_logging_proto_init() {
	if File_logging_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logging_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRuntimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRuntimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWarnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWarnReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWarnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadWarnReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarnLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logging_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logging_proto_goTypes,
		DependencyIndexes: file_logging_proto_depIdxs,
		EnumInfos:         file_logging_proto_enumTypes,
		MessageInfos:      file_logging_proto_msgTypes,
	}.Build()
	File_logging_proto = out.File
	file_logging_proto_rawDesc = nil
	file_logging_proto_goTypes = nil
	file_logging_proto_depIdxs = nil
}
